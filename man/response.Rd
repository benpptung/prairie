% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/response.R
\name{response}
\alias{response}
\title{Response objects}
\description{
An R6Class respresentation of an HTTP response. The response object is used 
inside route callback functions where it can be
}
\section{Fields}{

  
  None.
}

\section{Methods}{

  
  Response objects understand the methods below. Many of these methods 
  invisibly return the response object and allow additional methods to be
  chained. See the following example handler, 
  \preformatted{  function(req, res) \{
    res$status(404)$body("Page not found")$send()
  \}
  }
  Methods which end chains return a value, like \code{get}, or end
  execution of the handler, like \code{send} or \code{json}.
  
  \strong{\code{append(field, value)}}
  
  Append character vector \code{value} to the existing value for header field
  \code{field}.
  
  \strong{\code{attachment(path = NULL)}}
  
  Calling \code{attachment} will set the "Content-Disposition" and
  "Content-Type" HTTP header fields of the response object.
  
  If \code{path} is specified the path is split, the attchment file name
  parsed, and "Content-Disposition" set accordingly.
  
  \strong{\code{download(path, filename = path)}}
  
  Prompts the client to download a file specified by \code{path}. An
  alternate name may be specified by \code{filename}.
  
  Ends execution of the handler.
  
  \strong{\code{end(body = NULL)}}
  
  Typically used to halt callback execution when a request is incomplete. If
  \code{body} is not \code{NULL} then the response body will be overwritten
  when \code{end} is called.
  
  Ends execution of the handler.
  
  \strong{\code{format(handlers)}}
  
  Used to modify the response based on the \code{Accept} HTTP header of the
  request received. \code{handlers} is a list of functions. The specific 
  function to use for a given request is determined by list name and then by
  list order. See example,
  \preformatted{  list(
    # selected if "text/html" is accepted
    "text/html" = function() {
      res$send("We like HTML too")
    },
    # selected if "text/plain", "text/html", etc. 
    # are accepted
    "text/*" = function() {
      res$send("We accept all texts of types")
    },
    # selected if no accepted type is found
    "default" = function() {
      res$send("We find no fault with default")}
  )}
  If \code{"default"} is not supplied and no matching type is found then a 
  406 status is sent back to the client.
}
\examples{
route(
  'get',
  '^.+',
  function(req, res) {
    res$set('Connection', 'close')

    res$status(301)$send('Page is gone!')
  }
)
}

