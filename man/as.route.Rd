% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/route.R
\name{as.route}
\alias{as.route}
\alias{as.route.character}
\alias{as.route.list}
\alias{as.route.route}
\alias{is.route}
\title{Coercing Objects to Routes}
\usage{
as.route(x, ...)

\method{as.route}{route}(x, ...)

\method{as.route}{character}(x, directory = "routes", ...)

\method{as.route}{list}(x, ...)

is.route(x)
}
\arguments{
\item{x}{An \R object.}

\item{directory}{System path to the folder containing the route file.}

\item{\ldots}{Additional arguments passed on to methods.}
}
\value{
An object of class \code{route}.
}
\description{
The function \code{as.route} provides an alternative way to create
\code{\link[=route]{routes}} from lists or files.
}
\details{
If \code{x} is a list, \code{x} must have the following named items:
\code{method}, \code{path}, and \code{handler}.

If \code{x} is a character vector, \code{x} is interpreted as a file name.
The file must contain a route defined using the \link{route} function. The
default directory for route files is "routes", but a different folder may be
specified by the argument \code{path}.

The S3 generic function \code{as.route} is exported by prairie to encourage
creation of \code{as.route.*} functions. Custom \code{as.route} functions
allow users to coerce their classes to routes and quickly serve them over
HTTP.
}
\examples{
# Easily reuse routes and keep your
# application modular by storing routes
# in separate files.

tmp <- tempfile()
writeLines('route("GET", "^$", function(req) response())', tmp)

droute <- as.route(tmp, dir = '')

# as.route.list is a thin wrapper

route_route <- route(
  'POST',
  '^$',
  function(req) response()
)

list_route <- list(
  method = 'POST',
  path = '^$',
  handler = function(req) response()
)

all.equal(route_route, list_route)

is.route(route_route)
is.route(list_route)
}

